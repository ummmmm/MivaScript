{
	"scope": "source.mivascript",

	"completions":
	[
		{ "trigger": "abs", 							"contents": "abs( ${1:number} )" },
		{ "trigger": "acos", 							"contents": "acos( ${1:number} )" },
		{ "trigger": "asciichar", 						"contents": "asciichar( ${1:number} )" },
		{ "trigger": "asciivalue", 						"contents": "asciivalue( ${1:character} )" },
		{ "trigger": "asin", 							"contents": "asin( ${1:number} )" },
		{ "trigger": "atan", 							"contents": "atan( ${1:number} )" },
		{ "trigger": "atan2", 							"contents": "atan2( ${1:x}, ${2:y} )" },
		{ "trigger": "bf_decrypt", 						"contents": "bf_decrypt( ${1:key}, ${2:encrypted}, ${3:plaintext var} )" },
		{ "trigger": "bf_encrypt", 						"contents": "bf_encrypt( ${1:key}, ${2:plaintext}, ${3:encrypted var} )" },
		{ "trigger": "ceil", 							"contents": "ceil( ${1:number} )" },
		{ "trigger": "cos", 							"contents": "cos( ${1:number} )" },
		{ "trigger": "cosh", 							"contents": "cosh( ${1:number} )" },
		{ "trigger": "crypto_base64_decode", 			"contents": "crypto_base64_decode( ${1:data} )" },
		{ "trigger": "crypto_base64_encode", 			"contents": "crypto_base64_encode( ${1:data} )" },
		{ "trigger": "crypto_cipher_block_size", 		"contents": "crypto_cipher_block_size( ${1:ciphername} )" },
		{ "trigger": "crypto_cipher_iv_length", 		"contents": "crypto_cipher_iv_length( ${1:ciphername} )" },
		{ "trigger": "crypto_cipher_key_length", 		"contents": "crypto_cipher_key_length( ${1:ciphername} )" },
		{ "trigger": "crypto_cipher_mode", 				"contents": "crypto_cipher_mode( ${1:ciphername} )" },
		{ "trigger": "crypto_digest_block_size", 		"contents": "crypto_digest_block_size( ${1:digestname} )" },
		{ "trigger": "crypto_digest_size", 				"contents": "crypto_digest_size( ${1:digestname} )" },
		{ "trigger": "crypto_evp_decrypt", 				"contents": "crypto_evp_decrypt( ${1:ciphername}, ${2:key}, ${3:iv}, ${4:encrypted}, ${5:plaintext var} )" },
		{ "trigger": "crypto_evp_digest", 				"contents": "crypto_evp_digest( ${1:digestname}, ${2:buffer var}, ${3:digest var} )" },
		{ "trigger": "crypto_evp_encrypt", 				"contents": "crypto_evp_encrypt( ${1:ciphername}, ${2:key}, ${3:iv}, ${4:plaintext}, ${5:encrypted var} )" },
		{ "trigger": "crypto_evp_hmac", 				"contents": "crypto_evp_hmac( ${1:digestname}, ${2:key}, ${3:buffer var}, ${4:digest var} )" },
		{ "trigger": "crypto_hmac_md5", 				"contents": "crypto_hmac_md5( ${1:buffer var}, ${2:key}, ${3:format}, ${4:result var} )" },
		{ "trigger": "crypto_hmac_sha1", 				"contents": "crypto_hmac_sha1( ${1:value}, ${2:key}, ${3:output_format}, ${4:output} )" },
		{ "trigger": "crypto_hmac_sha256", 				"contents": "crypto_hmac_sha256( ${1:buffer var}, ${2:key}, ${3:format}, ${4:result var} )" },
		{ "trigger": "crypto_last_error", 				"contents": "crypto_last_error()" },
		{ "trigger": "crypto_last_ssl_error", 			"contents": "crypto_last_ssl_error()" },
		{ "trigger": "crypto_library_version", 			"contents": "crypto_library_version( ${1:info} )" },
		{ "trigger": "crypto_md5", 						"contents": "crypto_md5( ${1:buffer} )" },
		{ "trigger": "crypto_md5_file", 				"contents": "crypto_md5_file( ${1:file}, ${2:location}, ${3:hash var} )" },
		{ "trigger": "crypto_pbkdf1", 					"contents": "crypto_pbkdf1( ${1:digestname}, ${2:password}, ${3:salt}, ${4:iterations}, ${5:dklen}, ${6:dk var} )" },
		{ "trigger": "crypto_pbkdf2", 					"contents": "crypto_pbkdf2( ${1:digestname}, ${2:password}, ${3:salt}, ${4:iterations}, ${5:dklen}, ${6:dk var} )" },
		{ "trigger": "crypto_rand_bytes", 				"contents": "crypto_rand_bytes( ${1:n} )" },
		{ "trigger": "crypto_rand_set_rand_engine", 	"contents": "crypto_rand_set_rand_engine( ${1:engine} )" },
		{ "trigger": "crypto_sha1", 					"contents": "crypto_sha1( ${1:buffer var}, ${2:format}, ${3:result var} )" },
		{ "trigger": "crypto_sha256", 					"contents": "crypto_sha256( ${1:buffer var}, ${2:format}, ${3:result var} )" },
		{ "trigger": "crypto_xor", 						"contents": "crypto_xor( ${1:buffer var}, ${2:dest var} )" },
		{ "trigger": "decodeattribute", 				"contents": "decodeattribute( ${1:attribute} )" },
		{ "trigger": "decodeentities", 					"contents": "decodeentities( ${1:string} )" },
		{ "trigger": "dir", 							"contents": "dir( ${1:path}, ${2:location}, ${3:entries var} )" },
		{ "trigger": "encodeattribute", 				"contents": "encodeattribute( ${1:attribute} )" },
		{ "trigger": "encodeentities", 					"contents": "encodeentities( ${1:string} )" },
		{ "trigger": "encodejavascriptstring",			"contents": "encodejavascriptstring( ${1:string} )" },
		{ "trigger": "exp", 							"contents": "exp( ${1:number} )" },
		{ "trigger": "fchmod", 							"contents": "fchmod( ${1:path}, ${2:mode} )" },
		{ "trigger": "fcopy", 							"contents": "fcopy( ${1:source}, ${2:destination} )" },
		{ "trigger": "fdelete", 						"contents": "fdelete( ${1:path} )" },
		{ "trigger": "fexists", 						"contents": "fexists( ${1:path} )" },
		{ "trigger": "file_append", 					"contents": "file_append( ${1:path}, '${2:data/script}${2/(d$)|(da$)|(s$)|(sc$)|.*/?1:ata:?2:ta:?3:cript:?4:ript/}', ${3:data var} )" },
		{ "trigger": "file_create", 					"contents": "file_create( ${1:path}, '${2:data/script}${2/(d$)|(da$)|(s$)|(sc$)|.*/?1:ata:?2:ta:?3:cript:?4:ript/}', ${3:data var} )" },
		{ "trigger": "file_read", 						"contents": "file_read( ${1:path}, '${2:data/script}${2/(d$)|(da$)|(s$)|(sc$)|.*/?1:ata:?2:ta:?3:cript:?4:ript/}', ${3:data var} )" },
		{ "trigger": "file_read_bytes", 				"contents": "file_read_bytes( ${1:path}, '${2:data/script}${2/(d$)|(da$)|(s$)|(sc$)|.*/?1:ata:?2:ta:?3:cript:?4:ript/}', ${3:offset}, ${4:length}, ${5:data} )" },
		{ "trigger": "fisdir", 							"contents": "fisdir( ${1:path} )" },
		{ "trigger": "floor", 							"contents": "floor( ${1:number} )" },
		{ "trigger": "fmkdir", 							"contents": "fmkdir( ${1:path} )" },
		{ "trigger": "fmod", 							"contents": "fmod( ${1:x}, ${2:y} )" },
		{ "trigger": "fmode", 							"contents": "fmode( ${1:path} )" },
		{ "trigger": "frename", 						"contents": "frename( ${1:source}, ${2:destination} )" },
		{ "trigger": "fscopy", 							"contents": "fscopy( ${1:data_source}, ${2:script_destination} )" },
		{ "trigger": "fsize", 							"contents": "fsize( ${1:path} )" },
		{ "trigger": "fsrename", 						"contents": "fsrename( ${1:source}, ${2:destination} )" },
		{ "trigger": "fsymlink", 						"contents": "fsymlink( ${1:source}, ${2:destination} )" },
		{ "trigger": "ftime", 							"contents": "ftime( ${1:path} )" },
		{ "trigger": "gettoken", 						"contents": "gettoken( ${1:delimited_string}, ${2:character}, ${3:position} )" },
		{ "trigger": "glosub", 							"contents": "glosub( ${1:target_string}, ${2:search}, ${3:replace} )" },
		{ "trigger": "glosub_array", 					"contents": "glosub_array( ${1:string}, ${2:search}, ${3:replace} )" },
		{ "trigger": "indexof", 						"contents": "indexof( ${1:search_string}, ${2:target_string var}, ${3:start_number} )" },
		{ "trigger": "indexofi", 						"contents": "indexofi( ${1:search_string}, ${2:target_string var}, ${3:start_number} )" },
		{ "trigger": "int", 							"contents": "int( ${1:number} )" },
		{ "trigger": "isalnum", 						"contents": "isalnum( ${1:string} )" },
		{ "trigger": "isalpha", 						"contents": "isalpha( ${1:string} )" },
		{ "trigger": "isascii", 						"contents": "isascii( ${1:string} )" },
		{ "trigger": "iscntrl", 						"contents": "iscntrl( ${1:string} )" },
		{ "trigger": "isdigit", 						"contents": "isdigit( ${1:string} )" },
		{ "trigger": "isgraph", 						"contents": "isgraph( ${1:string} )" },
		{ "trigger": "islower", 						"contents": "islower( ${1:string} )" },
		{ "trigger": "isprint", 						"contents": "isprint( ${1:string} )" },
		{ "trigger": "ispunct", 						"contents": "ispunct( ${1:string} )" },
		{ "trigger": "isspace", 						"contents": "isspace( ${1:string} )" },
		{ "trigger": "isupper", 						"contents": "isupper( ${1:string} )" },
		{ "trigger": "isxdigit", 						"contents": "isxdigit( ${1:string} )" },
		{ "trigger": "keyword_extract", 				"contents": "keyword_extract( ${1:string}, ${2:keywords var} )" },
		{ "trigger": "keyword_extract_merge", 			"contents": "keyword_extract_merge( ${1:string}, ${2:weight} )" },
		{ "trigger": "keyword_extract_merge_init", 		"contents": "keyword_extract_merge_init()" },
		{ "trigger": "keyword_extract_merge_results", 	"contents": "keyword_extract_merge_results( ${1:keywords var} )" },
		{ "trigger": "keyword_in", 						"contents": "keyword_in( ${1:keywords_array var}, ${2:search_string} )" },
		{ "trigger": "len", 							"contents": "len( ${1:string} )" },
		{ "trigger": "len_var", 						"contents": "len_var( ${1:string var} )" },
		{ "trigger": "log", 							"contents": "log( ${1:number} )" },
		{ "trigger": "log10", 							"contents": "log10( ${1:number} )" },
		{ "trigger": "ltrim", 							"contents": "ltrim( ${1:string} )" },
		{ "trigger": "makesessionid", 					"contents": "makesessionid()" },
		{ "trigger": "max", 							"contents": "max( ${1:a}, ${2:b} )" },
		{ "trigger": "min", 							"contents": "min( ${1:a}, ${2:b} )" },
		{ "trigger": "miva_array_binarysearch", 		"contents": "miva_array_binarysearch( ${1:key}, ${2:array var}, ${3:callback}, ${4:data var} )" },
		{ "trigger": "miva_array_clear", 				"contents": "miva_array_clear( ${1:array var}, ${2:start}, ${3:count} )" },
		{ "trigger": "miva_array_collapse", 			"contents": "miva_array_collapse( ${1:array var} )" },
		{ "trigger": "miva_array_copy", 				"contents": "miva_array_copy( ${1:source var}, ${2:sstart}, ${3:scount}, ${4:dest var}, ${5:dpos} )" },
		{ "trigger": "miva_array_copy_ref", 			"contents": "miva_array_copy_ref( ${1:source var}, ${2:sstart}, ${3:scount}, ${4:dest var}, ${5:dpos} )" },
		{ "trigger": "miva_array_delete", 				"contents": "miva_array_delete( ${1:array var}, ${2:start}, ${3:count} )" },
		{ "trigger": "miva_array_deserialize", 			"contents": "miva_array_deserialize( ${1:string} )" },
		{ "trigger": "miva_array_elements", 			"contents": "miva_array_elements( ${1:aggregate var} )" },
		{ "trigger": "miva_array_filter", 				"contents": "miva_array_filter( ${1:array var}, ${2:offset}, ${3:element var}, ${4:filter_expr}, ${5:output} )" },
		{ "trigger": "miva_array_filter_ref",			"contents": "miva_array_filter_ref( ${1:array var}, ${2:offset}, ${3:element var}, ${4:filter_expr}, ${5:output} )" },
		{ "trigger": "miva_array_find", 				"contents": "miva_array_find( ${1:needle}, ${2:haystack var}, ${3:offset} )" },
		{ "trigger": "miva_array_insert", 				"contents": "miva_array_insert( ${1:array var}, ${2:element}, ${3:pos} )" },
		{ "trigger": "miva_array_insert_ref", 			"contents": "miva_array_insert_ref( ${1:array var}, ${2:element var}, ${3:pos} )" },
		{ "trigger": "miva_array_insert_var", 			"contents": "miva_array_insert_var( ${1:array var}, ${2:element var}, ${3:pos} )" },
		{ "trigger": "miva_array_max", 					"contents": "miva_array_max( ${1:aggregate var} )" },
		{ "trigger": "miva_array_merge", 				"contents": "miva_array_merge( ${1:source var}, ${2:sstart}, ${3:scount}, ${4:dest var}, ${5:dpos} )" },
		{ "trigger": "miva_array_merge_ref", 			"contents": "miva_array_merge_ref( ${1:source var}, ${2:sstart}, ${3:scount}, ${4:dest var}, ${5:dpos} )" },
		{ "trigger": "miva_array_min", 					"contents": "miva_array_min( ${1:aggregate var} )" },
		{ "trigger": "miva_array_next", 				"contents": "miva_array_next( ${1:aggregate var}, ${2:index} )" },
		{ "trigger": "miva_array_pop", 					"contents": "miva_array_pop( ${1:array var} )" },
		{ "trigger": "miva_array_pop_ref", 				"contents": "miva_array_pop_ref( ${1:array var}, ${2:element var} )" },
		{ "trigger": "miva_array_previous", 			"contents": "miva_array_previous( ${1:aggregate var}, ${2:index} )" },
		{ "trigger": "miva_array_search", 				"contents": "miva_array_search( ${1:array var}, ${2:offset}, ${3:element var}, ${4:filter_expr} )" },
		{ "trigger": "miva_array_serialize", 			"contents": "miva_array_serialize( ${1:aggregate var} )" },
		{ "trigger": "miva_array_shift", 				"contents": "miva_array_shift( ${1:array var} )" },
		{ "trigger": "miva_array_shift_ref", 			"contents": "miva_array_shift_ref( ${1:array var}, ${2:element var} )" },
		{ "trigger": "miva_array_sort", 				"contents": "miva_array_sort( ${1:aggregate var}, ${2:callback}, ${3:data var} )" },
		{ "trigger": "miva_cdata_encode", 				"contents": "miva_cdata_encode( ${1:data} )" },
		{ "trigger": "miva_csv_encode", 				"contents": "miva_csv_encode( ${1:data}, ${2:delimiter} )" },
		{ "trigger": "miva_closelog", 					"contents": "miva_closelog()" },
		{ "trigger": "miva_element_exists", 			"contents": "miva_element_exists( ${1:array var}, ${2:index} )" },
		{ "trigger": "miva_getvarlist", 				"contents": "miva_getvarlist( ${1:scope} )" },
		{ "trigger": "miva_hex_decode", 				"contents": "miva_hex_decode( ${1:data} )" },
		{ "trigger": "miva_hex_encode", 				"contents": "miva_hex_encode( ${1:data} )" },
		{ "trigger": "miva_ieee754_normalize", 			"contents": "miva_ieee754_normalize( ${1:significant_digits}, ${2:value} )" },
		{ "trigger": "miva_joinstring", 				"contents": "miva_joinstring( ${1:data}, ${2:join_with}, '${3:escape,insensitive}' )" },
		{ "trigger": "miva_json_decode", 				"contents": "miva_json_decode( ${1:data}, ${2:output var} )" },
		{ "trigger": "miva_json_decode_last_error", 	"contents": "miva_json_decode_last_error()" },
		{ "trigger": "miva_lockfile", 					"contents": "miva_lockfile( ${1:path}, ${2:location} )" },
		{ "trigger": "miva_member_exists", 				"contents": "miva_member_exists( ${1:structure var}, ${2:member} )" },
		{ "trigger": "miva_openlog", 					"contents": "miva_openlog( ${1:ident}, ${2:logopt}, ${3:facility} )" },
		{ "trigger": "miva_output_flush", 				"contents": "miva_output_flush()" },
		{ "trigger": "miva_output_header", 				"contents": "miva_output_header( ${1:header}, ${2:value} )" },
		{ "trigger": "miva_setdefaultdatabase", 		"contents": "miva_setdefaultdatabase( ${1:database} )" },
		{ "trigger": "miva_setdefaultlanguage", 		"contents": "miva_setdefaultlanguage( ${1:language} )" },
		{ "trigger": "miva_setlanguage", 				"contents": "miva_setlanguage( ${1:language} )" },
		{ "trigger": "miva_setlogmask", 				"contents": "miva_setlogmask( ${1:maskpri} )" },
		{ "trigger": "miva_sleep", 						"contents": "miva_sleep( ${1:msecs} )" },
		{ "trigger": "miva_splitstring", 				"contents": "miva_splitstring( ${1:string}, ${2:delimiter}, ${3:output var}, '${4:trim,ltrim,trim,lower,upper,escape,insensitive}' )" },
		{ "trigger": "miva_struct_members", 			"contents": "miva_struct_members( ${1:aggregate var}, ${2:members var} )" },
		{ "trigger": "miva_template_compile", 			"contents": "miva_template_compile( ${1:signat}, ${2:source var}, ${3:sourceitems var}, ${4:target}, ${5:errors var} )" },
		{ "trigger": "miva_template_compile_dump", 		"contents": "miva_template_compile_dump( ${1:source var}, ${2:errors var} )" },
		{ "trigger": "miva_template_compile_itemlist", 	"contents": "miva_template_compile_itemlist( ${1:signat}, ${2:source var}, ${3:sourceitems var}, ${4:target}, ${5:errors var} )" },
		{ "trigger": "miva_variable_value", 			"contents": "miva_variable_value( ${1:string} )" },
		{ "trigger": "miva_writelog", 					"contents": "miva_writelog( ${1:priority}, ${2:message} )" },
		{ "trigger": "mktime_t", 						"contents": "mktime_t( ${1:year}, ${2:month}, ${3:dayofmonth}, ${4:hours}, ${5:minutes}, ${6:seconds}, ${7:timezone} )" },
		{ "trigger": "padl", 							"contents": "padl( ${1:string}, ${2:length}, ${3:character} )" },
		{ "trigger": "padr", 							"contents": "padr( ${1:string}, ${2:length}, ${3:character} )" },
		{ "trigger": "power", 							"contents": "power( ${1:number}, ${2:matissa} )" },
		{ "trigger": "random", 							"contents": "random( ${1:max} )" },
		{ "trigger": "rnd", 							"contents": "rnd( ${1:value}, ${2:precision} )" },
		{ "trigger": "rsa_free", 						"contents": "rsa_free( ${1:rsa var} )" },
		{ "trigger": "rsa_generate_keypair", 			"contents": "rsa_generate_keypair( ${1:pubkey_file}, ${2:privkey_file}, ${3:bits}, ${4:e}, ${5:passphrase} )" },
		{ "trigger": "rsa_generate_keypair_mem", 		"contents": "rsa_generate_keypair_mem( ${1:pubkey var}, ${2:privkey var}, ${3:bits}, ${4:e}, ${5:passphrase} )" },
		{ "trigger": "rsa_generate_keypair_mem_cipher", "contents": "rsa_generate_keypair_mem_cipher( ${1:pubkey var}, ${2:privkey var}, ${3:bits}, ${4:e}, ${5:passphrase}, ${6:ciphername} )" },
		{ "trigger": "rsa_load_privatekey", 			"contents": "rsa_load_privatekey( ${1:privkey_file}, ${2:rsa var}, ${3:passphrase} )" },
		{ "trigger": "rsa_load_privatekey_mem", 		"contents": "rsa_load_privatekey_mem( ${1:privkey}, ${2:rsa var}, ${3:passphrase} )" },
		{ "trigger": "rsa_load_privatekey_engine", 		"contents": "rsa_load_privatekey_engine( ${1:engine}, ${2:key_id}, ${3:rsa var} )" },
		{ "trigger": "rsa_load_publickey", 				"contents": "rsa_load_publickey( ${1:pubkey_file}, ${2:rsa var} )" },
		{ "trigger": "rsa_load_publickey_mem", 			"contents": "rsa_load_publickey_mem( ${1:pubkey}, ${2:rsa var} )" },
		{ "trigger": "rsa_load_publickey_engine", 		"contents": "rsa_load_publickey_engine( ${1:engine}, ${2:key_id}, ${3:rsa var} )" },
		{ "trigger": "rsa_private_decrypt", 			"contents": "rsa_private_decrypt( ${1:rsa}, ${2:encrypted}, ${3:plaintext var} )" },
		{ "trigger": "rsa_private_encrypt", 			"contents": "rsa_private_encrypt( ${1:rsa}, ${2:plaintext}, ${3:encrypted var} )" },
		{ "trigger": "rsa_public_decrypt", 				"contents": "rsa_public_decrypt( ${1:rsa}, ${2:encrypted}, ${3:plaintext var} )" },
		{ "trigger": "rsa_public_encrypt", 				"contents": "rsa_public_encrypt( ${1:rsa}, ${2:plaintext}, ${3:encrypted var} )" },
		{ "trigger": "rsa_save_privatekey", 			"contents": "rsa_save_privatekey( ${1:privkey_file}, ${2:rsa var}, ${3:passphrase} )" },
		{ "trigger": "rsa_save_privatekey_mem", 		"contents": "rsa_save_privatekey_mem( ${1:privkey var}, ${2:rsa var}, ${3:passphrase} )" },
		{ "trigger": "rsa_save_privatekey_mem_cipher", 	"contents": "rsa_save_privatekey_mem_cipher( ${1:privkey var}, ${2:rsa var}, ${3:passphrase}, ${4:ciphername} )" },
		{ "trigger": "rsa_sign", 						"contents": "rsa_sign( ${1:rsa}, ${2:buffer}, ${3:signature var} )" },
		{ "trigger": "rsa_verify", 						"contents": "rsa_verify( ${1:rsa}, ${2:buffer}, ${3:signature} )" },
		{ "trigger": "rtrim", 							"contents": "rtrim( ${1:string} )" },
		{ "trigger": "schmod", 							"contents": "schmod( ${1:path}, ${2:mode} )" },
		{ "trigger": "scopy", 							"contents": "scopy( ${1:source}, ${2:destination} )" },
		{ "trigger": "sdelete", 						"contents": "sdelete( ${1:path} )" },
		{ "trigger": "sexists", 						"contents": "sexists( ${1:path} )" },
		{ "trigger": "sfrename", 						"contents": "sfrename( ${1:source}, ${2:destination} )" },
		{ "trigger": "sin", 							"contents": "sin( ${1:number} )" },
		{ "trigger": "sinh", 							"contents": "sinh( ${1:number} )" },
		{ "trigger": "sisdir", 							"contents": "sisdir( ${1:path} )" },
		{ "trigger": "slugify", 						"contents": "slugify( ${1:value} )" },
		{ "trigger": "smkdir", 							"contents": "smkdir( ${1:path} )" },
		{ "trigger": "smode", 							"contents": "smode( ${1:path} )" },
		{ "trigger": "sqrt", 							"contents": "sqrt( ${1:number} )" },
		{ "trigger": "srandom", 						"contents": "srandom( ${1:seed} )" },
		{ "trigger": "srename", 						"contents": "srename( ${1:source}, ${2:destination} )" },
		{ "trigger": "ssize", 							"contents": "ssize( ${1:path} )" },
		{ "trigger": "ssymlink", 						"contents": "ssymlink( ${1:source}, ${2:destination} )" },
		{ "trigger": "stime", 							"contents": "stime( ${1:path} )" },
		{ "trigger": "substring", 						"contents": "substring( ${1:string}, ${2:position}, ${3:length} )" },
		{ "trigger": "substring_var", 					"contents": "substring_var( ${1:string var}, ${2:position}, ${3:length} )" },
		{ "trigger": "tan", 							"contents": "tan( ${1:number} )" },
		{ "trigger": "tanh", 							"contents": "tanh( ${1:number} )" },
		{ "trigger": "tar_create", 						"contents": "tar_create( ${1:file}, ${2:file_loc}, ${3:dir}, ${4:dir_loc}, ${5:flags} )" },
		{ "trigger": "tar_directory", 					"contents": "tar_directory( ${1:file}, ${2:location}, ${3:desc var} )" },
		{ "trigger": "tar_extract", 					"contents": "tar_extract( ${1:file}, ${2:file_loc}, ${3:dir}, ${4:dir_loc} )" },
		{ "trigger": "timezone", 						"contents": "timezone()" },
		{ "trigger": "time_t_dayofmonth", 				"contents": "time_t_dayofmonth( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_dayofweek", 				"contents": "time_t_dayofweek( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_dayofyear", 				"contents": "time_t_dayofyear( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_hour", 					"contents": "time_t_hour( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_min", 						"contents": "time_t_min( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_month", 					"contents": "time_t_month( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_sec", 						"contents": "time_t_sec( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "time_t_year", 					"contents": "time_t_year( ${1:timet}, ${2:time_zone} )" },
		{ "trigger": "tokenize", 						"contents": "tokenize( ${1:string}, ${2:variables} )" },
		{ "trigger": "tolower", 						"contents": "tolower( ${1:string} )" },
		{ "trigger": "toupper", 						"contents": "toupper( ${1:string} )" },
		{ "trigger": "trim", 							"contents": "trim( ${1:string} )" },
		{ "trigger": "wdownload", 						"contents": "wdownload( ${1:url}, ${2:filepath}, ${3:location}, ${4:callback}, ${5:callbackdata var} )" },
		{ "trigger": "wget", 							"contents": "wget( ${1:url}, ${2:filepath}, ${3:location} )" },
		{ "trigger": "x509_create", 					"contents": "x509_create( ${1:cert}, ${2:x509 var} )" },
		{ "trigger": "x509_free", 						"contents": "x509_free( ${1:rsa var} )" },
		{ "trigger": "x509_load", 						"contents": "x509_load( ${1:cert}, ${2:x509 var} )" },
		{ "trigger": "x509_rsa_publickey", 				"contents": "x509_rsa_publickey( ${1:x509 var}, ${2:rsa var} )" },
		{ "trigger": "x509_verify", 					"contents": "x509_verify( ${1:x509 var}, ${2:trusted_certs} )" },
		{ "trigger": "xml_parse", 						"contents": "xml_parse( ${1:filepath}, ${2:location}, ${3:output var} )" },
		{ "trigger": "xml_parse_error", 				"contents": "xml_parse_error( ${1:lineno var}, ${2:error var} )" },
		{ "trigger": "xml_parse_section", 				"contents": "xml_parse_section( ${1:output var}, ${2:eof var} )" },
		{ "trigger": "xml_parse_section_getstate", 		"contents": "xml_parse_section_getstate( ${1:target var} )" },
		{ "trigger": "xml_parse_section_init", 			"contents": "xml_parse_section_init( ${1:filepath}, ${2:location}, ${3:level} )" },
		{ "trigger": "xml_parse_section_setstate", 		"contents": "xml_parse_section_setstate( ${1:source var} )" },
		{ "trigger": "xml_parse_set_colon_replacement", "contents": "xml_parse_set_colon_replacement( ${1:colon} )" },
		{ "trigger": "xml_parse_var", 					"contents": "xml_parse_var( ${1:var var}, ${2:output var} )" }
	]
}
